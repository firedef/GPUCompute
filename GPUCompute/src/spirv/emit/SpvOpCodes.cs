using GPUCompute.spirv.emit.enums;

namespace GPUCompute.spirv.emit; 

public static class SpvOpCodes {
    public static (bool result, bool resultType) HasResultAndType(this SpvOpCode opCode) {
        return opCode switch {
            SpvOpCode.OpNop => (false, false),
            SpvOpCode.OpUndef => (true, true),
            SpvOpCode.OpSourceContinued => (false, false),
            SpvOpCode.OpSource => (false, false),
            SpvOpCode.OpSourceExtension => (false, false),
            SpvOpCode.OpName => (false, false),
            SpvOpCode.OpMemberName => (false, false),
            SpvOpCode.OpString => (true, false),
            SpvOpCode.OpLine => (false, false),
            SpvOpCode.OpExtension => (false, false),
            SpvOpCode.OpExtInstImport => (true, false),
            SpvOpCode.OpExtInst => (true, true),
            SpvOpCode.OpMemoryModel => (false, false),
            SpvOpCode.OpEntryPoint => (false, false),
            SpvOpCode.OpExecutionMode => (false, false),
            SpvOpCode.OpCapability => (false, false),
            SpvOpCode.OpTypeVoid => (true, false),
            SpvOpCode.OpTypeBool => (true, false),
            SpvOpCode.OpTypeInt => (true, false),
            SpvOpCode.OpTypeFloat => (true, false),
            SpvOpCode.OpTypeVector => (true, false),
            SpvOpCode.OpTypeMatrix => (true, false),
            SpvOpCode.OpTypeImage => (true, false),
            SpvOpCode.OpTypeSampler => (true, false),
            SpvOpCode.OpTypeSampledImage => (true, false),
            SpvOpCode.OpTypeArray => (true, false),
            SpvOpCode.OpTypeRuntimeArray => (true, false),
            SpvOpCode.OpTypeStruct => (true, false),
            SpvOpCode.OpTypeOpaque => (true, false),
            SpvOpCode.OpTypePointer => (true, false),
            SpvOpCode.OpTypeFunction => (true, false),
            SpvOpCode.OpTypeEvent => (true, false),
            SpvOpCode.OpTypeDeviceEvent => (true, false),
            SpvOpCode.OpTypeReserveId => (true, false),
            SpvOpCode.OpTypeQueue => (true, false),
            SpvOpCode.OpTypePipe => (true, false),
            SpvOpCode.OpTypeForwardPointer => (false, false),
            SpvOpCode.OpConstantTrue => (true, true),
            SpvOpCode.OpConstantFalse => (true, true),
            SpvOpCode.OpConstant => (true, true),
            SpvOpCode.OpConstantComposite => (true, true),
            SpvOpCode.OpConstantSampler => (true, true),
            SpvOpCode.OpConstantNull => (true, true),
            SpvOpCode.OpSpecConstantTrue => (true, true),
            SpvOpCode.OpSpecConstantFalse => (true, true),
            SpvOpCode.OpSpecConstant => (true, true),
            SpvOpCode.OpSpecConstantComposite => (true, true),
            SpvOpCode.OpSpecConstantOp => (true, true),
            SpvOpCode.OpFunction => (true, true),
            SpvOpCode.OpFunctionParameter => (true, true),
            SpvOpCode.OpFunctionEnd => (false, false),
            SpvOpCode.OpFunctionCall => (true, true),
            SpvOpCode.OpVariable => (true, true),
            SpvOpCode.OpImageTexelPointer => (true, true),
            SpvOpCode.OpLoad => (true, true),
            SpvOpCode.OpStore => (false, false),
            SpvOpCode.OpCopyMemory => (false, false),
            SpvOpCode.OpCopyMemorySized => (false, false),
            SpvOpCode.OpAccessChain => (true, true),
            SpvOpCode.OpInBoundsAccessChain => (true, true),
            SpvOpCode.OpPtrAccessChain => (true, true),
            SpvOpCode.OpArrayLength => (true, true),
            SpvOpCode.OpGenericPtrMemSemantics => (true, true),
            SpvOpCode.OpInBoundsPtrAccessChain => (true, true),
            SpvOpCode.OpDecorate => (false, false),
            SpvOpCode.OpMemberDecorate => (false, false),
            SpvOpCode.OpDecorationGroup => (true, false),
            SpvOpCode.OpGroupDecorate => (false, false),
            SpvOpCode.OpGroupMemberDecorate => (false, false),
            SpvOpCode.OpVectorExtractDynamic => (true, true),
            SpvOpCode.OpVectorInsertDynamic => (true, true),
            SpvOpCode.OpVectorShuffle => (true, true),
            SpvOpCode.OpCompositeConstruct => (true, true),
            SpvOpCode.OpCompositeExtract => (true, true),
            SpvOpCode.OpCompositeInsert => (true, true),
            SpvOpCode.OpCopyObject => (true, true),
            SpvOpCode.OpTranspose => (true, true),
            SpvOpCode.OpSampledImage => (true, true),
            SpvOpCode.OpImageSampleImplicitLod => (true, true),
            SpvOpCode.OpImageSampleExplicitLod => (true, true),
            SpvOpCode.OpImageSampleDrefImplicitLod => (true, true),
            SpvOpCode.OpImageSampleDrefExplicitLod => (true, true),
            SpvOpCode.OpImageSampleProjImplicitLod => (true, true),
            SpvOpCode.OpImageSampleProjExplicitLod => (true, true),
            SpvOpCode.OpImageSampleProjDrefImplicitLod => (true, true),
            SpvOpCode.OpImageSampleProjDrefExplicitLod => (true, true),
            SpvOpCode.OpImageFetch => (true, true),
            SpvOpCode.OpImageGather => (true, true),
            SpvOpCode.OpImageDrefGather => (true, true),
            SpvOpCode.OpImageRead => (true, true),
            SpvOpCode.OpImageWrite => (false, false),
            SpvOpCode.OpImage => (true, true),
            SpvOpCode.OpImageQueryFormat => (true, true),
            SpvOpCode.OpImageQueryOrder => (true, true),
            SpvOpCode.OpImageQuerySizeLod => (true, true),
            SpvOpCode.OpImageQuerySize => (true, true),
            SpvOpCode.OpImageQueryLod => (true, true),
            SpvOpCode.OpImageQueryLevels => (true, true),
            SpvOpCode.OpImageQuerySamples => (true, true),
            SpvOpCode.OpConvertFToU => (true, true),
            SpvOpCode.OpConvertFToS => (true, true),
            SpvOpCode.OpConvertSToF => (true, true),
            SpvOpCode.OpConvertUToF => (true, true),
            SpvOpCode.OpUConvert => (true, true),
            SpvOpCode.OpSConvert => (true, true),
            SpvOpCode.OpFConvert => (true, true),
            SpvOpCode.OpQuantizeToF16 => (true, true),
            SpvOpCode.OpConvertPtrToU => (true, true),
            SpvOpCode.OpSatConvertSToU => (true, true),
            SpvOpCode.OpSatConvertUToS => (true, true),
            SpvOpCode.OpConvertUToPtr => (true, true),
            SpvOpCode.OpPtrCastToGeneric => (true, true),
            SpvOpCode.OpGenericCastToPtr => (true, true),
            SpvOpCode.OpGenericCastToPtrExplicit => (true, true),
            SpvOpCode.OpBitcast => (true, true),
            SpvOpCode.OpSNegate => (true, true),
            SpvOpCode.OpFNegate => (true, true),
            SpvOpCode.OpIAdd => (true, true),
            SpvOpCode.OpFAdd => (true, true),
            SpvOpCode.OpISub => (true, true),
            SpvOpCode.OpFSub => (true, true),
            SpvOpCode.OpIMul => (true, true),
            SpvOpCode.OpFMul => (true, true),
            SpvOpCode.OpUDiv => (true, true),
            SpvOpCode.OpSDiv => (true, true),
            SpvOpCode.OpFDiv => (true, true),
            SpvOpCode.OpUMod => (true, true),
            SpvOpCode.OpSRem => (true, true),
            SpvOpCode.OpSMod => (true, true),
            SpvOpCode.OpFRem => (true, true),
            SpvOpCode.OpFMod => (true, true),
            SpvOpCode.OpVectorTimesScalar => (true, true),
            SpvOpCode.OpMatrixTimesScalar => (true, true),
            SpvOpCode.OpVectorTimesMatrix => (true, true),
            SpvOpCode.OpMatrixTimesVector => (true, true),
            SpvOpCode.OpMatrixTimesMatrix => (true, true),
            SpvOpCode.OpOuterProduct => (true, true),
            SpvOpCode.OpDot => (true, true),
            SpvOpCode.OpIAddCarry => (true, true),
            SpvOpCode.OpISubBorrow => (true, true),
            SpvOpCode.OpUMulExtended => (true, true),
            SpvOpCode.OpSMulExtended => (true, true),
            SpvOpCode.OpAny => (true, true),
            SpvOpCode.OpAll => (true, true),
            SpvOpCode.OpIsNan => (true, true),
            SpvOpCode.OpIsInf => (true, true),
            SpvOpCode.OpIsFinite => (true, true),
            SpvOpCode.OpIsNormal => (true, true),
            SpvOpCode.OpSignBitSet => (true, true),
            SpvOpCode.OpLessOrGreater => (true, true),
            SpvOpCode.OpOrdered => (true, true),
            SpvOpCode.OpUnordered => (true, true),
            SpvOpCode.OpLogicalEqual => (true, true),
            SpvOpCode.OpLogicalNotEqual => (true, true),
            SpvOpCode.OpLogicalOr => (true, true),
            SpvOpCode.OpLogicalAnd => (true, true),
            SpvOpCode.OpLogicalNot => (true, true),
            SpvOpCode.OpSelect => (true, true),
            SpvOpCode.OpIEqual => (true, true),
            SpvOpCode.OpINotEqual => (true, true),
            SpvOpCode.OpUGreaterThan => (true, true),
            SpvOpCode.OpSGreaterThan => (true, true),
            SpvOpCode.OpUGreaterThanEqual => (true, true),
            SpvOpCode.OpSGreaterThanEqual => (true, true),
            SpvOpCode.OpULessThan => (true, true),
            SpvOpCode.OpSLessThan => (true, true),
            SpvOpCode.OpULessThanEqual => (true, true),
            SpvOpCode.OpSLessThanEqual => (true, true),
            SpvOpCode.OpFOrdEqual => (true, true),
            SpvOpCode.OpFUnordEqual => (true, true),
            SpvOpCode.OpFOrdNotEqual => (true, true),
            SpvOpCode.OpFUnordNotEqual => (true, true),
            SpvOpCode.OpFOrdLessThan => (true, true),
            SpvOpCode.OpFUnordLessThan => (true, true),
            SpvOpCode.OpFOrdGreaterThan => (true, true),
            SpvOpCode.OpFUnordGreaterThan => (true, true),
            SpvOpCode.OpFOrdLessThanEqual => (true, true),
            SpvOpCode.OpFUnordLessThanEqual => (true, true),
            SpvOpCode.OpFOrdGreaterThanEqual => (true, true),
            SpvOpCode.OpFUnordGreaterThanEqual => (true, true),
            SpvOpCode.OpShiftRightLogical => (true, true),
            SpvOpCode.OpShiftRightArithmetic => (true, true),
            SpvOpCode.OpShiftLeftLogical => (true, true),
            SpvOpCode.OpBitwiseOr => (true, true),
            SpvOpCode.OpBitwiseXor => (true, true),
            SpvOpCode.OpBitwiseAnd => (true, true),
            SpvOpCode.OpNot => (true, true),
            SpvOpCode.OpBitFieldInsert => (true, true),
            SpvOpCode.OpBitFieldSExtract => (true, true),
            SpvOpCode.OpBitFieldUExtract => (true, true),
            SpvOpCode.OpBitReverse => (true, true),
            SpvOpCode.OpBitCount => (true, true),
            SpvOpCode.OpDPdx => (true, true),
            SpvOpCode.OpDPdy => (true, true),
            SpvOpCode.OpFwidth => (true, true),
            SpvOpCode.OpDPdxFine => (true, true),
            SpvOpCode.OpDPdyFine => (true, true),
            SpvOpCode.OpFwidthFine => (true, true),
            SpvOpCode.OpDPdxCoarse => (true, true),
            SpvOpCode.OpDPdyCoarse => (true, true),
            SpvOpCode.OpFwidthCoarse => (true, true),
            SpvOpCode.OpEmitVertex => (false, false),
            SpvOpCode.OpEndPrimitive => (false, false),
            SpvOpCode.OpEmitStreamVertex => (false, false),
            SpvOpCode.OpEndStreamPrimitive => (false, false),
            SpvOpCode.OpControlBarrier => (false, false),
            SpvOpCode.OpMemoryBarrier => (false, false),
            SpvOpCode.OpAtomicLoad => (true, true),
            SpvOpCode.OpAtomicStore => (false, false),
            SpvOpCode.OpAtomicExchange => (true, true),
            SpvOpCode.OpAtomicCompareExchange => (true, true),
            SpvOpCode.OpAtomicCompareExchangeWeak => (true, true),
            SpvOpCode.OpAtomicIIncrement => (true, true),
            SpvOpCode.OpAtomicIDecrement => (true, true),
            SpvOpCode.OpAtomicIAdd => (true, true),
            SpvOpCode.OpAtomicISub => (true, true),
            SpvOpCode.OpAtomicSMin => (true, true),
            SpvOpCode.OpAtomicUMin => (true, true),
            SpvOpCode.OpAtomicSMax => (true, true),
            SpvOpCode.OpAtomicUMax => (true, true),
            SpvOpCode.OpAtomicAnd => (true, true),
            SpvOpCode.OpAtomicOr => (true, true),
            SpvOpCode.OpAtomicXor => (true, true),
            SpvOpCode.OpPhi => (true, true),
            SpvOpCode.OpLoopMerge => (false, false),
            SpvOpCode.OpSelectionMerge => (false, false),
            SpvOpCode.OpLabel => (true, false),
            SpvOpCode.OpBranch => (false, false),
            SpvOpCode.OpBranchConditional => (false, false),
            SpvOpCode.OpSwitch => (false, false),
            SpvOpCode.OpKill => (false, false),
            SpvOpCode.OpReturn => (false, false),
            SpvOpCode.OpReturnValue => (false, false),
            SpvOpCode.OpUnreachable => (false, false),
            SpvOpCode.OpLifetimeStart => (false, false),
            SpvOpCode.OpLifetimeStop => (false, false),
            SpvOpCode.OpGroupAsyncCopy => (true, true),
            SpvOpCode.OpGroupWaitEvents => (false, false),
            SpvOpCode.OpGroupAll => (true, true),
            SpvOpCode.OpGroupAny => (true, true),
            SpvOpCode.OpGroupBroadcast => (true, true),
            SpvOpCode.OpGroupIAdd => (true, true),
            SpvOpCode.OpGroupFAdd => (true, true),
            SpvOpCode.OpGroupFMin => (true, true),
            SpvOpCode.OpGroupUMin => (true, true),
            SpvOpCode.OpGroupSMin => (true, true),
            SpvOpCode.OpGroupFMax => (true, true),
            SpvOpCode.OpGroupUMax => (true, true),
            SpvOpCode.OpGroupSMax => (true, true),
            SpvOpCode.OpReadPipe => (true, true),
            SpvOpCode.OpWritePipe => (true, true),
            SpvOpCode.OpReservedReadPipe => (true, true),
            SpvOpCode.OpReservedWritePipe => (true, true),
            SpvOpCode.OpReserveReadPipePackets => (true, true),
            SpvOpCode.OpReserveWritePipePackets => (true, true),
            SpvOpCode.OpCommitReadPipe => (false, false),
            SpvOpCode.OpCommitWritePipe => (false, false),
            SpvOpCode.OpIsValidReserveId => (true, true),
            SpvOpCode.OpGetNumPipePackets => (true, true),
            SpvOpCode.OpGetMaxPipePackets => (true, true),
            SpvOpCode.OpGroupReserveReadPipePackets => (true, true),
            SpvOpCode.OpGroupReserveWritePipePackets => (true, true),
            SpvOpCode.OpGroupCommitReadPipe => (false, false),
            SpvOpCode.OpGroupCommitWritePipe => (false, false),
            SpvOpCode.OpEnqueueMarker => (true, true),
            SpvOpCode.OpEnqueueKernel => (true, true),
            SpvOpCode.OpGetKernelNDrangeSubGroupCount => (true, true),
            SpvOpCode.OpGetKernelNDrangeMaxSubGroupSize => (true, true),
            SpvOpCode.OpGetKernelWorkGroupSize => (true, true),
            SpvOpCode.OpGetKernelPreferredWorkGroupSizeMultiple => (true, true),
            SpvOpCode.OpRetainEvent => (false, false),
            SpvOpCode.OpReleaseEvent => (false, false),
            SpvOpCode.OpCreateUserEvent => (true, true),
            SpvOpCode.OpIsValidEvent => (true, true),
            SpvOpCode.OpSetUserEventStatus => (false, false),
            SpvOpCode.OpCaptureEventProfilingInfo => (false, false),
            SpvOpCode.OpGetDefaultQueue => (true, true),
            SpvOpCode.OpBuildNDRange => (true, true),
            SpvOpCode.OpImageSparseSampleImplicitLod => (true, true),
            SpvOpCode.OpImageSparseSampleExplicitLod => (true, true),
            SpvOpCode.OpImageSparseSampleDrefImplicitLod => (true, true),
            SpvOpCode.OpImageSparseSampleDrefExplicitLod => (true, true),
            SpvOpCode.OpImageSparseSampleProjImplicitLod => (true, true),
            SpvOpCode.OpImageSparseSampleProjExplicitLod => (true, true),
            SpvOpCode.OpImageSparseSampleProjDrefImplicitLod => (true, true),
            SpvOpCode.OpImageSparseSampleProjDrefExplicitLod => (true, true),
            SpvOpCode.OpImageSparseFetch => (true, true),
            SpvOpCode.OpImageSparseGather => (true, true),
            SpvOpCode.OpImageSparseDrefGather => (true, true),
            SpvOpCode.OpImageSparseTexelsResident => (true, true),
            SpvOpCode.OpNoLine => (false, false),
            SpvOpCode.OpAtomicFlagTestAndSet => (true, true),
            SpvOpCode.OpAtomicFlagClear => (false, false),
            SpvOpCode.OpImageSparseRead => (true, true),
            SpvOpCode.OpSizeOf => (true, true),
            SpvOpCode.OpTypePipeStorage => (true, false),
            SpvOpCode.OpConstantPipeStorage => (true, true),
            SpvOpCode.OpCreatePipeFromPipeStorage => (true, true),
            SpvOpCode.OpGetKernelLocalSizeForSubgroupCount => (true, true),
            SpvOpCode.OpGetKernelMaxNumSubgroups => (true, true),
            SpvOpCode.OpTypeNamedBarrier => (true, false),
            SpvOpCode.OpNamedBarrierInitialize => (true, true),
            SpvOpCode.OpMemoryNamedBarrier => (false, false),
            SpvOpCode.OpModuleProcessed => (false, false),
            SpvOpCode.OpExecutionModeId => (false, false),
            SpvOpCode.OpDecorateId => (false, false),
            SpvOpCode.OpGroupNonUniformElect => (true, true),
            SpvOpCode.OpGroupNonUniformAll => (true, true),
            SpvOpCode.OpGroupNonUniformAny => (true, true),
            SpvOpCode.OpGroupNonUniformAllEqual => (true, true),
            SpvOpCode.OpGroupNonUniformBroadcast => (true, true),
            SpvOpCode.OpGroupNonUniformBroadcastFirst => (true, true),
            SpvOpCode.OpGroupNonUniformBallot => (true, true),
            SpvOpCode.OpGroupNonUniformInverseBallot => (true, true),
            SpvOpCode.OpGroupNonUniformBallotBitExtract => (true, true),
            SpvOpCode.OpGroupNonUniformBallotBitCount => (true, true),
            SpvOpCode.OpGroupNonUniformBallotFindLSB => (true, true),
            SpvOpCode.OpGroupNonUniformBallotFindMSB => (true, true),
            SpvOpCode.OpGroupNonUniformShuffle => (true, true),
            SpvOpCode.OpGroupNonUniformShuffleXor => (true, true),
            SpvOpCode.OpGroupNonUniformShuffleUp => (true, true),
            SpvOpCode.OpGroupNonUniformShuffleDown => (true, true),
            SpvOpCode.OpGroupNonUniformIAdd => (true, true),
            SpvOpCode.OpGroupNonUniformFAdd => (true, true),
            SpvOpCode.OpGroupNonUniformIMul => (true, true),
            SpvOpCode.OpGroupNonUniformFMul => (true, true),
            SpvOpCode.OpGroupNonUniformSMin => (true, true),
            SpvOpCode.OpGroupNonUniformUMin => (true, true),
            SpvOpCode.OpGroupNonUniformFMin => (true, true),
            SpvOpCode.OpGroupNonUniformSMax => (true, true),
            SpvOpCode.OpGroupNonUniformUMax => (true, true),
            SpvOpCode.OpGroupNonUniformFMax => (true, true),
            SpvOpCode.OpGroupNonUniformBitwiseAnd => (true, true),
            SpvOpCode.OpGroupNonUniformBitwiseOr => (true, true),
            SpvOpCode.OpGroupNonUniformBitwiseXor => (true, true),
            SpvOpCode.OpGroupNonUniformLogicalAnd => (true, true),
            SpvOpCode.OpGroupNonUniformLogicalOr => (true, true),
            SpvOpCode.OpGroupNonUniformLogicalXor => (true, true),
            SpvOpCode.OpGroupNonUniformQuadBroadcast => (true, true),
            SpvOpCode.OpGroupNonUniformQuadSwap => (true, true),
            SpvOpCode.OpCopyLogical => (true, true),
            SpvOpCode.OpPtrEqual => (true, true),
            SpvOpCode.OpPtrNotEqual => (true, true),
            SpvOpCode.OpPtrDiff => (true, true),
            SpvOpCode.OpTerminateInvocation => (false, false),
            SpvOpCode.OpSubgroupBallotKHR => (true, true),
            SpvOpCode.OpSubgroupFirstInvocationKHR => (true, true),
            SpvOpCode.OpSubgroupAllKHR => (true, true),
            SpvOpCode.OpSubgroupAnyKHR => (true, true),
            SpvOpCode.OpSubgroupAllEqualKHR => (true, true),
            SpvOpCode.OpGroupNonUniformRotateKHR => (true, true),
            SpvOpCode.OpSubgroupReadInvocationKHR => (true, true),
            SpvOpCode.OpTraceRayKHR => (false, false),
            SpvOpCode.OpExecuteCallableKHR => (false, false),
            SpvOpCode.OpConvertUToAccelerationStructureKHR => (true, true),
            SpvOpCode.OpIgnoreIntersectionKHR => (false, false),
            SpvOpCode.OpTerminateRayKHR => (false, false),
            SpvOpCode.OpSDot => (true, true),
            SpvOpCode.OpUDot => (true, true),
            SpvOpCode.OpSUDot => (true, true),
            SpvOpCode.OpSDotAccSat => (true, true),
            SpvOpCode.OpUDotAccSat => (true, true),
            SpvOpCode.OpSUDotAccSat => (true, true),
            SpvOpCode.OpTypeRayQueryKHR => (true, false),
            SpvOpCode.OpRayQueryInitializeKHR => (false, false),
            SpvOpCode.OpRayQueryTerminateKHR => (false, false),
            SpvOpCode.OpRayQueryGenerateIntersectionKHR => (false, false),
            SpvOpCode.OpRayQueryConfirmIntersectionKHR => (false, false),
            SpvOpCode.OpRayQueryProceedKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionTypeKHR => (true, true),
            SpvOpCode.OpGroupIAddNonUniformAMD => (true, true),
            SpvOpCode.OpGroupFAddNonUniformAMD => (true, true),
            SpvOpCode.OpGroupFMinNonUniformAMD => (true, true),
            SpvOpCode.OpGroupUMinNonUniformAMD => (true, true),
            SpvOpCode.OpGroupSMinNonUniformAMD => (true, true),
            SpvOpCode.OpGroupFMaxNonUniformAMD => (true, true),
            SpvOpCode.OpGroupUMaxNonUniformAMD => (true, true),
            SpvOpCode.OpGroupSMaxNonUniformAMD => (true, true),
            SpvOpCode.OpFragmentMaskFetchAMD => (true, true),
            SpvOpCode.OpFragmentFetchAMD => (true, true),
            SpvOpCode.OpReadClockKHR => (true, true),
            SpvOpCode.OpImageSampleFootprintNV => (true, true),
            SpvOpCode.OpGroupNonUniformPartitionNV => (true, true),
            SpvOpCode.OpWritePackedPrimitiveIndices4x8NV => (false, false),
            SpvOpCode.OpReportIntersectionNV => (true, true),
            SpvOpCode.OpIgnoreIntersectionNV => (false, false),
            SpvOpCode.OpTerminateRayNV => (false, false),
            SpvOpCode.OpTraceNV => (false, false),
            SpvOpCode.OpTraceMotionNV => (false, false),
            SpvOpCode.OpTraceRayMotionNV => (false, false),
            SpvOpCode.OpTypeAccelerationStructureNV => (true, false),
            SpvOpCode.OpExecuteCallableNV => (false, false),
            SpvOpCode.OpTypeCooperativeMatrixNV => (true, false),
            SpvOpCode.OpCooperativeMatrixLoadNV => (true, true),
            SpvOpCode.OpCooperativeMatrixStoreNV => (false, false),
            SpvOpCode.OpCooperativeMatrixMulAddNV => (true, true),
            SpvOpCode.OpCooperativeMatrixLengthNV => (true, true),
            SpvOpCode.OpBeginInvocationInterlockEXT => (false, false),
            SpvOpCode.OpEndInvocationInterlockEXT => (false, false),
            SpvOpCode.OpDemoteToHelperInvocation => (false, false),
            SpvOpCode.OpIsHelperInvocationEXT => (true, true),
            SpvOpCode.OpConvertUToImageNV => (true, true),
            SpvOpCode.OpConvertUToSamplerNV => (true, true),
            SpvOpCode.OpConvertImageToUNV => (true, true),
            SpvOpCode.OpConvertSamplerToUNV => (true, true),
            SpvOpCode.OpConvertUToSampledImageNV => (true, true),
            SpvOpCode.OpConvertSampledImageToUNV => (true, true),
            SpvOpCode.OpSamplerImageAddressingModeNV => (false, false),
            SpvOpCode.OpSubgroupShuffleINTEL => (true, true),
            SpvOpCode.OpSubgroupShuffleDownINTEL => (true, true),
            SpvOpCode.OpSubgroupShuffleUpINTEL => (true, true),
            SpvOpCode.OpSubgroupShuffleXorINTEL => (true, true),
            SpvOpCode.OpSubgroupBlockReadINTEL => (true, true),
            SpvOpCode.OpSubgroupBlockWriteINTEL => (false, false),
            SpvOpCode.OpSubgroupImageBlockReadINTEL => (true, true),
            SpvOpCode.OpSubgroupImageBlockWriteINTEL => (false, false),
            SpvOpCode.OpSubgroupImageMediaBlockReadINTEL => (true, true),
            SpvOpCode.OpSubgroupImageMediaBlockWriteINTEL => (false, false),
            SpvOpCode.OpUCountLeadingZerosINTEL => (true, true),
            SpvOpCode.OpUCountTrailingZerosINTEL => (true, true),
            SpvOpCode.OpAbsISubINTEL => (true, true),
            SpvOpCode.OpAbsUSubINTEL => (true, true),
            SpvOpCode.OpIAddSatINTEL => (true, true),
            SpvOpCode.OpUAddSatINTEL => (true, true),
            SpvOpCode.OpIAverageINTEL => (true, true),
            SpvOpCode.OpUAverageINTEL => (true, true),
            SpvOpCode.OpIAverageRoundedINTEL => (true, true),
            SpvOpCode.OpUAverageRoundedINTEL => (true, true),
            SpvOpCode.OpISubSatINTEL => (true, true),
            SpvOpCode.OpUSubSatINTEL => (true, true),
            SpvOpCode.OpIMul32x16INTEL => (true, true),
            SpvOpCode.OpUMul32x16INTEL => (true, true),
            SpvOpCode.OpConstantFunctionPointerINTEL => (true, true),
            SpvOpCode.OpFunctionPointerCallINTEL => (true, true),
            SpvOpCode.OpAsmTargetINTEL => (true, true),
            SpvOpCode.OpAsmINTEL => (true, true),
            SpvOpCode.OpAsmCallINTEL => (true, true),
            SpvOpCode.OpAtomicFMinEXT => (true, true),
            SpvOpCode.OpAtomicFMaxEXT => (true, true),
            SpvOpCode.OpAssumeTrueKHR => (false, false),
            SpvOpCode.OpExpectKHR => (true, true),
            SpvOpCode.OpDecorateString => (false, false),
            SpvOpCode.OpMemberDecorateString => (false, false),
            SpvOpCode.OpVmeImageINTEL => (true, true),
            SpvOpCode.OpTypeVmeImageINTEL => (true, false),
            SpvOpCode.OpTypeAvcImePayloadINTEL => (true, false),
            SpvOpCode.OpTypeAvcRefPayloadINTEL => (true, false),
            SpvOpCode.OpTypeAvcSicPayloadINTEL => (true, false),
            SpvOpCode.OpTypeAvcMcePayloadINTEL => (true, false),
            SpvOpCode.OpTypeAvcMceResultINTEL => (true, false),
            SpvOpCode.OpTypeAvcImeResultINTEL => (true, false),
            SpvOpCode.OpTypeAvcImeResultSingleReferenceStreamoutINTEL => (true, false),
            SpvOpCode.OpTypeAvcImeResultDualReferenceStreamoutINTEL => (true, false),
            SpvOpCode.OpTypeAvcImeSingleReferenceStreaminINTEL => (true, false),
            SpvOpCode.OpTypeAvcImeDualReferenceStreaminINTEL => (true, false),
            SpvOpCode.OpTypeAvcRefResultINTEL => (true, false),
            SpvOpCode.OpTypeAvcSicResultINTEL => (true, false),
            SpvOpCode.OpSubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultInterShapePenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceSetInterShapePenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceSetInterDirectionPenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceSetMotionVectorCostFunctionINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceSetAcOnlyHaarINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceConvertToImePayloadINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceConvertToImeResultINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceConvertToRefPayloadINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceConvertToRefResultINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceConvertToSicPayloadINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceConvertToSicResultINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetMotionVectorsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetInterDistortionsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetBestInterDistortionsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetInterMajorShapeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetInterMinorShapeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetInterDirectionsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetInterMotionVectorCountINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetInterReferenceIdsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeInitializeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeSetSingleReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeSetDualReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeRefWindowSizeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeAdjustRefOffsetINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeConvertToMcePayloadINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeSetMaxMotionVectorCountINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeSetUnidirectionalMixDisableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeSetEarlySearchTerminationThresholdINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeSetWeightedSadINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeEvaluateWithSingleReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeEvaluateWithDualReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeConvertToMceResultINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetSingleReferenceStreaminINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetDualReferenceStreaminINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeStripSingleReferenceStreamoutINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeStripDualReferenceStreamoutINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetBorderReachedINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetTruncatedSearchIndicationINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcFmeInitializeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcBmeInitializeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcRefConvertToMcePayloadINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcRefSetBidirectionalMixDisableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcRefSetBilinearFilterEnableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcRefEvaluateWithSingleReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcRefEvaluateWithDualReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcRefEvaluateWithMultiReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcRefConvertToMceResultINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicInitializeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicConfigureSkcINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicConfigureIpeLumaINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicConfigureIpeLumaChromaINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetMotionVectorMaskINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicConvertToMcePayloadINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicSetIntraLumaShapePenaltyINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicSetIntraLumaModeCostFunctionINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicSetIntraChromaModeCostFunctionINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicSetBilinearFilterEnableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicSetSkcForwardTransformEnableINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicSetBlockBasedRawSkipSadINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicEvaluateIpeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicEvaluateWithSingleReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicEvaluateWithDualReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicEvaluateWithMultiReferenceINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicConvertToMceResultINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetIpeLumaShapeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetBestIpeLumaDistortionINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetBestIpeChromaDistortionINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetPackedIpeLumaModesINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetIpeChromaModeINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL => (true, true),
            SpvOpCode.OpSubgroupAvcSicGetInterRawSadsINTEL => (true, true),
            SpvOpCode.OpVariableLengthArrayINTEL => (true, true),
            SpvOpCode.OpSaveMemoryINTEL => (true, true),
            SpvOpCode.OpRestoreMemoryINTEL => (false, false),
            SpvOpCode.OpArbitraryFloatSinCosPiINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatCastINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatCastFromIntINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatCastToIntINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatAddINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatSubINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatMulINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatDivINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatGTINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatGEINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatLTINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatLEINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatEQINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatRecipINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatRSqrtINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatCbrtINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatHypotINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatSqrtINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatLogINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatLog2INTEL => (true, true),
            SpvOpCode.OpArbitraryFloatLog10INTEL => (true, true),
            SpvOpCode.OpArbitraryFloatLog1pINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatExpINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatExp2INTEL => (true, true),
            SpvOpCode.OpArbitraryFloatExp10INTEL => (true, true),
            SpvOpCode.OpArbitraryFloatExpm1INTEL => (true, true),
            SpvOpCode.OpArbitraryFloatSinINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatCosINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatSinCosINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatSinPiINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatCosPiINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatASinINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatASinPiINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatACosINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatACosPiINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatATanINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatATanPiINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatATan2INTEL => (true, true),
            SpvOpCode.OpArbitraryFloatPowINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatPowRINTEL => (true, true),
            SpvOpCode.OpArbitraryFloatPowNINTEL => (true, true),
            SpvOpCode.OpLoopControlINTEL => (false, false),
            SpvOpCode.OpAliasDomainDeclINTEL => (true, false),
            SpvOpCode.OpAliasScopeDeclINTEL => (true, false),
            SpvOpCode.OpAliasScopeListDeclINTEL => (true, false),
            SpvOpCode.OpFixedSqrtINTEL => (true, true),
            SpvOpCode.OpFixedRecipINTEL => (true, true),
            SpvOpCode.OpFixedRsqrtINTEL => (true, true),
            SpvOpCode.OpFixedSinINTEL => (true, true),
            SpvOpCode.OpFixedCosINTEL => (true, true),
            SpvOpCode.OpFixedSinCosINTEL => (true, true),
            SpvOpCode.OpFixedSinPiINTEL => (true, true),
            SpvOpCode.OpFixedCosPiINTEL => (true, true),
            SpvOpCode.OpFixedSinCosPiINTEL => (true, true),
            SpvOpCode.OpFixedLogINTEL => (true, true),
            SpvOpCode.OpFixedExpINTEL => (true, true),
            SpvOpCode.OpPtrCastToCrossWorkgroupINTEL => (true, true),
            SpvOpCode.OpCrossWorkgroupCastToPtrINTEL => (true, true),
            SpvOpCode.OpReadPipeBlockingINTEL => (true, true),
            SpvOpCode.OpWritePipeBlockingINTEL => (true, true),
            SpvOpCode.OpFPGARegINTEL => (true, true),
            SpvOpCode.OpRayQueryGetRayTMinKHR => (true, true),
            SpvOpCode.OpRayQueryGetRayFlagsKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionTKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionInstanceCustomIndexKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionInstanceIdKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionGeometryIndexKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionPrimitiveIndexKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionBarycentricsKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionFrontFaceKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionCandidateAABBOpaqueKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionObjectRayDirectionKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionObjectRayOriginKHR => (true, true),
            SpvOpCode.OpRayQueryGetWorldRayDirectionKHR => (true, true),
            SpvOpCode.OpRayQueryGetWorldRayOriginKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionObjectToWorldKHR => (true, true),
            SpvOpCode.OpRayQueryGetIntersectionWorldToObjectKHR => (true, true),
            SpvOpCode.OpAtomicFAddEXT => (true, true),
            SpvOpCode.OpTypeBufferSurfaceINTEL => (true, false),
            SpvOpCode.OpTypeStructContinuedINTEL => (false, false),
            SpvOpCode.OpConstantCompositeContinuedINTEL => (false, false),
            SpvOpCode.OpSpecConstantCompositeContinuedINTEL => (false, false),
            SpvOpCode.OpControlBarrierArriveINTEL => (false, false),
            SpvOpCode.OpControlBarrierWaitINTEL => (false, false),
            SpvOpCode.OpGroupIMulKHR => (true, true),
            SpvOpCode.OpGroupFMulKHR => (true, true),
            SpvOpCode.OpGroupBitwiseAndKHR => (true, true),
            SpvOpCode.OpGroupBitwiseOrKHR => (true, true),
            SpvOpCode.OpGroupBitwiseXorKHR => (true, true),
            SpvOpCode.OpGroupLogicalAndKHR => (true, true),
            SpvOpCode.OpGroupLogicalOrKHR => (true, true),
            SpvOpCode.OpGroupLogicalXorKHR => (true, true),
            _ => throw new ArgumentOutOfRangeException(nameof(opCode), opCode, null)
        };
    }
}